is_mac()     { [[ $OSTYPE == darwin*   ]] }
is_linux()   { [[ $OSTYPE == linux-gnu ]] }
has()        { [[ -n "${commands[$1]}" ]] }

#begin znap
if [[ ! -r "$HOME/.local/share/zsh/plugins/znap/znap.zsh" ]]; then
    git clone --depth 1 https://github.com/marlonrichert/zsh-snap.git ~/.local/share/zsh/plugins/znap/
fi

source ~/.local/share/zsh/plugins/znap/znap.zsh

fpath+=( ~/.config/zsh )
autoload -Uz promptinit
promptinit
prompt aufforderung
znap prompt

function znap_source() {
    znap clone $1
    znap source $(echo $1 | cut  -d '/' -f 2)
}

znap_source 'git@github.com:jeffreytse/zsh-vi-mode'
znap_source 'git@github.com:zsh-users/zsh-autosuggestions'
znap_source 'git@github.com:zdharma-continuum/fast-syntax-highlighting'
znap_source 'git@github.com:MichaelAquilina/zsh-you-should-use'
znap_source 'git@github.com:MichaelAquilina/zsh-auto-notify'
znap_source 'git@github.com:zsh-users/zsh-completions'
znap_source 'git@github.com:romkatv/zsh-defer'

znap clone 'git@github.com:ohmyzsh/ohmyzsh'
znap source ohmyzsh lib/completion
znap source ohmyzsh lib/history
znap source ohmyzsh lib/git
znap source ohmyzsh lib/directories # ls and cd aliases
znap source ohmyzsh plugins/git
znap source ohmyzsh plugins/golang

ZSH_WEB_SEARCH_ENGINES=(
  cambridge "https://dictionary.cambridge.org/dictionary/english/"
  verbformen "https://www.verbformen.ru/?w="
)

znap source ohmyzsh lib/functions
znap source ohmyzsh plugins/web-search

fpath+=( ~[zsh-completions]/src )
if has docker; then
     znap fpath _docker 'docker completion zsh'
fi

#end znap

export EDITOR=vim

export PATH=$HOME/.local/bin/:$PATH

if has go; then
    export PATH=$PATH:$(go env GOPATH)/bin/
fi

if has nvim; then
    alias vim=nvim
    export EDITOR=nvim
fi
alias vi=vim
alias v=vim

set -o vi

if has bat; then
    alias cat="bat --plain"
fi

if has rg; then
    alias fgrep="rg -F"
fi

alias rm="rm -i"
alias mv="mv -i"

if has eza; then
    alias tree="eza --tree"
    alias ls="eza"
else
    if is_mac; then
        if has gls; then
            alias ls="gls --color"
        fi
    else
        alias ls="ls --color"
    fi
fi

alias o="open"

alias gld="git -c diff.external=difft log --ext-diff"
alias gshd="git -c diff.external=difft show --ext-diff"
alias gdd="git -c diff.external=difft diff"

# don't use git checkout
unalias gco gcb gcB gcd gcm gcor

alias mvprogress="rsync -aP --remove-source-files"

REAL_SSH=$(which ssh)

function ssh() {
    if [[ -n ${TMUX_PANE} ]]; then
        tmux rename-window -t ${TMUX_PANE} "ssh $@"
        zsh-defer tmux setw automatic-rename
    fi
    $REAL_SSH "$@"
}

function git-vimdiff () {
    GIT_EXTERNAL_DIFF=git-diff-wrapper git --no-pager diff $@;
}

if is_linux; then
    alias pbcopy='xclip -selection clipboard'
    alias pbpaste='xclip -selection clipboard -o'
    alias open='xdg-open'
fi

# begin FZF
export FZF_DEFAULT_OPTS="--cycle --color=gutter:-1 --pointer '>' --border rounded --highlight-line"
export FZF_CTRL_R_OPTS='--height=100% --margin 15%'

if has fzf; then
     zvm_after_init_commands+=('znap eval fzf-zsh "fzf --zsh"')
fi

# shift tab backward cycle
bindkey '^[[Z' reverse-menu-complete

if [ -e ~/.zshrc.local ]; then
    source ~/.zshrc.local
fi

# end FZF

export DFT_DISPLAY=side-by-side-show-both

function command_not_found_handler() {
    local RED='\033[0;31m'
    local BOLD_RED='\033[1;31m'
    local NC='\033[0m'
    echo "${RED}command not found: ${BOLD_RED}$1${NC}"
    return 127
}

# never ever beep ever
setopt NO_BEEP

# add % if there is no a trailing new line
setopt PROMPT_SP
setopt PROMPT_CR
